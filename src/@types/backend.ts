/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/user/auth/redirect': {
    get: operations['get_social_login_redirect_url_api_user_auth_redirect_get'];
  };
  '/api/user/auth/callback': {
    get: operations['social_auth_callback_api_user_auth_callback_get'];
  };
  '/api/user/auth/token/refresh': {
    post: operations['access_token_refresh_api_user_auth_token_refresh_post'];
  };
  '/api/user/auth/logout': {
    post: operations['logout_api_user_auth_logout_post'];
  };
  '/api/user/certificates': {
    get: operations['certificate_level_list_api_user_certificates_get'];
  };
  '/api/user/certificates/{certificate_id}/levels': {
    get: operations['get_certificate_levels_api_user_certificates__certificate_id__levels_get'];
  };
  '/api/party/': {
    post: operations['create_party_api_party__post'];
  };
  '/api/party/{party_id}/participate': {
    post: operations['participate_in_party_api_party__party_id__participate_post'];
  };
  '/api/party/participants/{party_id}/status-change': {
    post: operations['participant_change_participation_status_api_party_participants__party_id__status_change_post'];
  };
  '/api/party/organizer/{party_id}/status-change/{participation_id}': {
    post: operations['organizer_change_participation_status_api_party_organizer__party_id__status_change__participation_id__post'];
  };
  '/api/party/details/{party_id}': {
    get: operations['get_party_details_api_party_details__party_id__get'];
  };
  '/api/party/list': {
    get: operations['get_party_list_api_party_list_get'];
  };
  '/': {
    get: operations['health_check__get'];
  };
  '/home': {
    get: operations['test_auth_home_get'];
  };
}

export interface components {
  schemas: {
    BaseResponse: {
      status_code?: number;
      message?: string;
      data?: Partial<unknown> & Partial<unknown>;
    };
    BaseResponse_List_certificate_levels__: {
      status_code?: number;
      message?: string;
      data?: Partial<components['schemas']['certificate_levels'][]> &
        Partial<unknown>;
    };
    BaseResponse_List_certificate_name__: {
      status_code?: number;
      message?: string;
      data?: Partial<components['schemas']['certificate_name'][]> &
        Partial<unknown>;
    };
    HTTPValidationError: {
      detail?: components['schemas']['ValidationError'][];
    };
    LoginResponseData: {
      user_info: components['schemas']['UserInfo'];
      access_token?: string;
      refresh_token?: string;
    };
    ParticipantProfile: {
      user_id: number;
      profile_picture: string;
      name: string;
      participation_id: number;
    };
    ParticipationStatus: 0 | 1 | 2 | 3;
    PartyCreateRequest: {
      title?: string;
      body?: Partial<string> & Partial<unknown>;
      gather_at?: string;
      due_at?: string;
      place_id?: number;
      place_name?: string;
      address?: string;
      longitude?: number;
      latitude?: number;
      participant_limit?: number;
      participant_cost?: number;
      sport_id?: number;
    };
    PartyDetail: {
      title: string;
      sport_name: string;
      gather_date: string;
      gather_time: string;
      participants_info: string;
      due_date: string;
      price: number;
      body: string;
      organizer_profile: components['schemas']['UserSimpleProfile'];
      posted_date: string;
      is_user_organizer?: boolean;
      pending_participants?: Partial<
        components['schemas']['ParticipantProfile'][]
      > &
        Partial<unknown>;
      approved_participants?: Partial<
        components['schemas']['ParticipantProfile'][]
      > &
        Partial<unknown>;
    };
    PartyDetailResponse: {
      status_code?: number;
      message?: string;
      data: components['schemas']['PartyDetail'];
    };
    PartyListDetail: {
      title: string;
      sport_name: string;
      gather_date: string;
      gather_time: string;
      participants_info: string;
      due_date: string;
      price: number;
      body: string;
      organizer_profile: components['schemas']['UserSimpleProfile'];
      posted_date: string;
      is_user_organizer?: boolean;
    };
    PartyListResponse: {
      status_code?: number;
      message?: string;
      data: components['schemas']['PartyListDetail'][];
    };
    RedirectUrlInfo: {
      redirect_url?: Partial<string> & Partial<unknown>;
    };
    SocialAuthPlatform: 'google' | 'kakao' | 'naver';
    SocialLoginCallbackResponse: {
      status_code?: number;
      message?: string;
      data?: Partial<components['schemas']['LoginResponseData']> &
        Partial<unknown>;
    };
    SocialLoginRedirectResponse: {
      status_code?: number;
      message?: string;
      data?: Partial<components['schemas']['RedirectUrlInfo']> &
        Partial<unknown>;
    };
    UserInfo: {
      sns_id?: Partial<string> & Partial<unknown>;
      name?: Partial<string> & Partial<unknown>;
      email?: Partial<string> & Partial<unknown>;
      profile_image?: Partial<string> & Partial<unknown>;
    };
    UserSimpleProfile: {
      user_id: number;
      profile_picture: string;
      name: string;
    };
    ValidationError: {
      loc: (Partial<string> & Partial<number>)[];
      msg: string;
      type: string;
    };
    certificate_levels: {
      id: number;
      level: string;
    };
    certificate_name: {
      id: number;
      name: string;
    };
    parties__dtos__RefreshTokenRequest: {
      new_status: components['schemas']['ParticipationStatus'];
    };
    users__dtos__RefreshTokenRequest: {
      refresh_token: string;
    };
  };
}

export interface operations {
  get_social_login_redirect_url_api_user_auth_redirect_get: {
    parameters: {
      query: {
        platform: components['schemas']['SocialAuthPlatform'];
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['SocialLoginRedirectResponse'];
        };
      };
      /** Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  social_auth_callback_api_user_auth_callback_get: {
    parameters: {
      query: {
        platform: components['schemas']['SocialAuthPlatform'];
        code: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['SocialLoginCallbackResponse'];
        };
      };
      /** Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  access_token_refresh_api_user_auth_token_refresh_post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['SocialLoginCallbackResponse'];
        };
      };
      /** Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['users__dtos__RefreshTokenRequest'];
      };
    };
  };
  logout_api_user_auth_logout_post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['BaseResponse'];
        };
      };
    };
  };
  certificate_level_list_api_user_certificates_get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['BaseResponse_List_certificate_name__'];
        };
      };
    };
  };
  get_certificate_levels_api_user_certificates__certificate_id__levels_get: {
    parameters: {
      path: {
        certificate_id: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['BaseResponse_List_certificate_levels__'];
        };
      };
      /** Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  create_party_api_party__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['BaseResponse'];
        };
      };
      /** Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['PartyCreateRequest'];
      };
    };
  };
  participate_in_party_api_party__party_id__participate_post: {
    parameters: {
      path: {
        party_id: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['BaseResponse'];
        };
      };
      /** Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  participant_change_participation_status_api_party_participants__party_id__status_change_post: {
    parameters: {
      path: {
        party_id: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['BaseResponse'];
        };
      };
      /** Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['parties__dtos__RefreshTokenRequest'];
      };
    };
  };
  organizer_change_participation_status_api_party_organizer__party_id__status_change__participation_id__post: {
    parameters: {
      path: {
        party_id: number;
        participation_id: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['BaseResponse'];
        };
      };
      /** Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['parties__dtos__RefreshTokenRequest'];
      };
    };
  };
  get_party_details_api_party_details__party_id__get: {
    parameters: {
      path: {
        party_id: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['PartyDetailResponse'];
        };
      };
      /** Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_party_list_api_party_list_get: {
    parameters: {
      query: {
        sport_id?: Partial<number> & Partial<unknown>;
        is_active?: Partial<boolean> & Partial<unknown>;
        gather_date_min?: Partial<string> & Partial<unknown>;
        gather_date_max?: Partial<string> & Partial<unknown>;
        search_query?: Partial<string> & Partial<unknown>;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['PartyListResponse'];
        };
      };
      /** Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  health_check__get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          'application/json': unknown;
        };
      };
    };
  };
  test_auth_home_get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          'application/json': unknown;
        };
      };
    };
  };
}

export interface external {}
