name: Deploy to Docker Hub

on:
  push:
    tags:
      - "*"

env: # 사용할 env
  AWS_REGION: ap-northeast-2

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        env:
          DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
        run: |
          GIT_TAG=${GITHUB_REF#refs/tags/}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPOSITORY:$GIT_TAG .
          docker push ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPOSITORY:$GIT_TAG

      - name: Log out from Docker Hub
        run: docker logout

      - name: Zip the build
        run: zip -r blue-rally-fe-build.zip .

      - name: Configure AWS credentials # AWS 로그인
        uses: aws-actions/configure-aws-credentials@v3
        with: # AWS 로그인에 필요한 정보들. 얘네는 Github Secret에 설정해야 한다.
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create metadata file and upload to S3
        run: |
          GIT_TAG=${GITHUB_REF#refs/tags/}
          echo $GIT_TAG > fe-metadata.txt
          aws s3 cp fe-metadata.txt s3://blue-rally/fe-metadata.txt

      - name: Upload to Amazon S3
        run: aws s3 cp blue-rally-fe-build.zip s3://blue-rally/blue-rally-fe-build.zip

      - name: Trigger AWS CodeDeploy
        run: |
          aws deploy create-deployment \
          --application-name blue-rally-fe-deploy \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --deployment-group-name blue-rally-fe-deploy-group \
          --s3-location bucket=blue-rally,bundleType=zip,key=blue-rally-fe-build.zip
